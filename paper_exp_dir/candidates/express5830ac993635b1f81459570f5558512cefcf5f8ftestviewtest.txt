Min editdistance: 48.00
Closest candidate: 5 10 }).should.seap('s', function(){
0 1  }(callback);"}});"callback.all('https://fanslanguages: true');"callback.test.test.jss.jss*/s});"
1 1  }).export.callback });"

2 1  } = { error);
2 2 assert.test.callback }();"
3 1 " }, function (engine: 'fixtures');" }}');
3 2 return 'foo.callback function (engine: 'foo' }, function () => { get('foo' }, function () { return 'foo', function () {});" });" } }, function () { done(); });"

4 1  }(function testYAMENTIONS'));
4 2 assert.assert.response(app,
5 1 assert.get('/cond'));
5 2 assert.assert.segments = {};
5 3 assert.count('s', arguments);
5 4 assert.skip('/n
5 5 app.get('/s', function(){
5 6 app.get('s')
5 7 ).return;
5 8 return.skip('s')
5 9 }).returns
5 10 }).should.seap('s', function(){
5 11 app.segmentsFinished();
5 12 assert.seap();
5 13 });
5 14 }
5 16 assert.test
6 1 assert.get('/callback', function () => null; });
6 2 assert.callback.callback.pause();
6 4 assert.pause();
6 7 it('should.skip('should.skip('should.skip('should.skip() is required by default');).should.skip('something');
6 9 });"

7 1 assert.get('/sseule.body.callback);
7 2  }} = function(app);
7 3 assert.callback.callback.callback.callback);
7 5 assert.test = function(app, callback.test.test = function(app, callback){
7 6 assert.test.callback.callback.callback.callback, callback);
7 7 assert.test.call(app, callback);
7 8 return callback.test.callback.callback.call(app, callback);
7 9 assert.call(app, callback);
7 10 return callback.call(app
8 1 "
9 1  }
