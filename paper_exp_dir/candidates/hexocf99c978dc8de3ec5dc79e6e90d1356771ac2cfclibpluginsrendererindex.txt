Min editdistance: 15.00
Closest candidate: 1 5 const nunjucks = require('./nunjucks');
0 1 renderer.register(\'swig', 'html', require('./swig'), true);
0 2 renderer.register(\'yml', 'json', require('./yaml'), true);
0 3 renderer.register('.swig', 'html', require('./swig'), true);
0 4 renderer.register('.yaml', \'json', require('./yaml'));
0 6 };'

1 2 const yaml = require('./yaml');
1 3 renderer.register('yml', 'json', yaml, true);
1 4 renderer.register('yaml', \'json', yaml, true);
1 5 const nunjucks = require('./nunjucks');
1 6 renderer.register(\'njk', \'html, nunjucks', nunjucks, true);
1 7 renderer.register(\'rawr', \'rawr, html, true);
1 8 renderer.register(\'vimeo', \'vimeo', nunjucks, true);
1 9 renderer.register(\'youtube\', \'youtube', \'youtube', nunjucks, true);
2 4 renderer.register('yaml', 'json', yaml, true);
2 5 }'

3 2 renderer.register(\'yml', \'json', require('./yaml'), true);
3 3 renderer.register(\'yaml', \'json', yaml, true);
4 2 const yaml = require("./yaml');
4 4 renderer.register(\'yaml', \'json\', yaml, true);
4 5 renderer.register('yaml', \'json\', yaml, true);
4 6 renderer.register(\'time', 'See you again...\', { use: true, sync: true })
4 7 .then(result => {
4 8 let output = `<p>${result.time}</p>`;
4 9 output += `<h1>${result.time}</h1>`;
4 10 output += yaml.stringify(result);
4 11 return output;
4 12 }).then(result => {
4 13 return Promise.all([
4 14 fs.mkdirs(themeDir),
4 15 fs.writeFile(config.yml, result)
4 16 ]).then(() => {
4 17 return hexo.init();
4 18 }).then(() => {
4 19 return fs.listDir(config.yml, {
4 20 ignore: [
4 21 fs.unlink(config.yml)],
4 22 fs.listDir(config.yml,
4 23 config.root) {
4 24 return sep;
4 25 }
4 26 });
4 28 function Render(ctx) {
4 29 this.context = ctx;
4 30 this.renderer = ctx.extend.renderer;
4 32 Render.prototype.isRenderable = function(path) {
4 33 return this.renderer.isRenderable(path);
4 34 };
4 35 Render.prototype.isRenderableSync = function(path) {
4 36 return this.renderer.isRenderableSync(path);
4 38 Render.prototype.getOutput = function(path) {
4 39 return this.renderer.getOutput(path);
4 41 Render.prototype.render = function(data, options, callback) {
4 42 if (!callback && typeof options === \'function\') {
4 43 callback = options;
4 44 options = {};
4 46 const { config } = ctx;
4 47 return new Promise((resolve, reject) => {
4 48 const { output } = fs.readFileSync(path);
4 49 data.content = input;
4 51 this.source.process(),
4 52 this.theme.process()
4 53 ]);
4 55 const { data } = this;
4 57 this.source.process()
4 60 const { extname } = data.engine;
4 61 if (!extname(data.path)) return;
4 62 extname(data.path).return(ctx.config.theme.config.output_output_output);
4 65 const result = return Promise.each(() => {
4 66 ctx.log.execFilter.execFilter(\'after_each_each, filter, filter._ }).then(data, filter);
4 67 ctx.execFilter.execFilter.execFilter.bind(data);
4 68  },() => return ctx.execFilter.execFilter.execFilter(\'after_ }).finally(data);
4 69 return return new return new Executor(data);
4 70 }).finally(() => {
4 71 return return {};
6 1 renderer.register('swig', 'html', require('./swig'), true);
7 3 renderer.register('yml', \'json', yaml, true);
7 5 end'

9 6 renderer.register(\'njk', 'html', nunjucks, true);
9 7 renderer.register(\'undefined', \'undefined\'));
9 8 renderer.register(\'object_type\', \'application/json\');
9 9 renderer.register(\'png', \'png', require('./png'));
9 10 renderer.register(\'image_tag\', \'image-tag\', require('./image_tag'));
9 11 renderer.register(\'url_for\', \'http://hexo.io/image.png\');
9 12 const img = require('./img\');
9 13 renderer.register(\'img\', img, { class: \'img' }, true);
9 14 renderer.register(\'image\', img, { class: \'img' }, true);
9 15 const include_code = str => str.replace(/`<code.*>[\\s\\S]*<\\/code><\\/pre>/gm, stripIndent);
9 16 const expected = [
9 17 \'<code>${title}</code> and> is a string</code>\',
9 18 \'<body>\',
9 19 \'<h1>This is a code-block</h1>\',
9 20 \'<p>No content at ${basename}</p>\
9 21 \',
9 22 \'<h2><p>Welcome</h2>\',
9 23 \'<h3>Hello tj holowaychuk</h3>\',
9 24 \'<h1>Hello tjane</h1>\',
9 25 \'<h2><p>Hello tj</p>\
9 27 \'<p>Hello tj@learnboost</h2>\',
9 28 \'<h3><p>Hello tj@learnboost</h3>\',
9 29 \'<h1>Loki</h1>\',
9 30 \'<h1>Jane</h1>\',
9 31 \'<h2><p>Jane</p>\'
9 32 ].join(\'\
9 33 \');
9 34 const link = require("./link');
9 35 returnrenderer.register(\'link\', link, true);
