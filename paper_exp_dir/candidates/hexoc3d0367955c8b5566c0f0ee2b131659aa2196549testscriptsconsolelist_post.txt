Min editdistance: 4.00
Closest candidate: 0 1 expect(console.log.calledWith(sinon.match('Date'))).to.be.true;
0 1 expect(console.log.calledWith(sinon.match('Date'))).to.be.true;
0 2 expect(console.log.calledWith(sinon.match('Title\'))).to.be.true;
0 3 expect(console.log.calledWith(sinon.match('Path'))).to.be.true;
0 4 expect(console.log.calledWith(sinon.match('Category\'))).to.be.true;
0 5 expect(console.log.calledWith(sinon.match('Tags\'))).to.be.true;
0 6 expect(console.log.calledWith(sinon.match('No posts.'))).to.be.true;
0 7 });
0 8 });'

1 3 expect(console.log.calledWith(sinon.match('Title'))).to.be.true;
2 1 }));
2 2 it('no post', () => {
2 3 const errorCallback = sinon.spy(err => {
2 4 err.should.have.property(\'message', \'No post\');
2 6 return Post.insert({
2 7 source: \'foo.md\',
2 8 slug: \'foo\'
2 9 }).catch(errorCallback).finally(() => {
2 10 errorCallback.calledOnce.should.be.true;
2 13 it(\'post - post_asset_folder enabled\', () => {
2 14 hexo.config.post_asset_folder = true;
2 18 }).then(result => {
2 19 result.should.eql([
2 20 \'---\',
2 21 \'title: "Hello World"\',
2 22 \'date: 2006-01-02 15:04:05\',
2 23 \'tags:\',
2 24 \'---'
2 25 ].join(\'\
2 26 \'));
2 27 }).then(() => {
2 28 listPosts();
6 5 expect(console.log.calledWith(sinon.match('Tags'))).to.be.true;
