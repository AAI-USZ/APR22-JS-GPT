Min editdistance: 4.00
Closest candidate: 8 1 data.content.should.eql('abc');"

0 1 });
0 2 });"

2 1 "

3 1 data.content.should.eql('');
3 2 data.excerpt.should.eql('');
3 3 data.more.should.eql('');
3 4 should.not.exist(auto_spacing by default);
5 1 data.content.should.eql('中文');
6 1 data.content.should.eql(content);
7 6 }],
7 7 \'test #param()', function(){
7 8 var param = get(\'param()\');
7 9 param(\'user\', function(req, res, next, val){
7 10 res.params[param(\'user\')] = val;
7 12 if (!isNaN(param(\'user\')) return next(\'route\');
7 13 param(\'else\', function(req, res){
7 14 res.params.user.should.equal(\'tj\');
7 16 res.params.foo.should.equal(/^\\w+/.test(param(\'foo\')[0]);
7 19 it(\'should return next(\'route\');
7 21 it(\'should return index if defined\', function(){
7 23 param([\'foo\', \'bar\', \'baz\']).should.equal(param(\'foo\'), [\'bar\', \'baz\']);
7 25 it(\'should return index if not defined\', function(){
7 29 it(\'should not return index if no defined\', function(){
7 33 it(\'should return index if no defined\', function(){
7 37 it(\'should return index if the defined is true\', function(){
7 39 param([\'foo\', \'bar\', \'baz\']).should.equal(param(\'baz\');
8 1 data.content.should.eql('abc');"

9 3 data.more.should.eql(content);
