Min editdistance: 47.00
Closest candidate: 4 2 return this.unresolved : this.solved });
0 1  resolved: config.verify(pkg.verify(pkg, 'f' + '*' + pkg') }, this.assignored-s', { use(this.assignored-solved') }), this.emitters: this.emit.bind(this.emit.bind(this.emitters, '*') })) { return { this.emit('solved' + (this.emitters: this.emitters: this.emitters') })) return { this.emit.bind(this.em
1 1  manager: { resolved: { use(this.manager) } });
1 2 this.emit.trackDecompressLocalization: function (this.trackDecompress: function (this.trackDecompress: this.trackDecomposedFields, resolved) }), "install() { return this.trackDecomposedFields() { return this.trackDecomposedFields() { return this.trackFields() { return this.trackDecomposedFields() { return this.trackDecomposedFields } }); };
1 3 this.trackDecomposed
2 1  resolved: { resolved: { }});" });
2 2 return this.emit('install');
2 3 this.emit('install', this.install', this.install, this.install');
2 4 return this.install();
2 5 };"

3 1  '*'];" });
3 2 var resolved : function resolver = new PackageRepolvers.resolve(this.resolve(this.resolved });
3 3 resolve(this.resolved() { cwd: resolved });
3 4 return this.resolve(this.resolved });
3 5 return this.resolved = function () { casc(this.resolved: this.resolved });
3 6 return this.resolved || this.resolved : this.resolved || this.resolved : this.resolved || { casc
4 1  }}).sort).sort().join(', "not: this.com"); "not: this.com: this.unressolved");
4 2 return this.unresolved : this.solved });
4 3 }.bind(this);
4 4 this.emit('install');
4 5 return this;
5 1  '-split'], '*'];
5 2 this.trackDecompress: config.compare: function (pkg) { return that'});" });
5 3 return this.emit('install', this.trackDecompeline: function (pkg) { return that.trackDecompeline }) { return that.trackDecomposed-promise; return that.trackDecomposed-promise; }).to.discard(); }); };"

6 1  "docs: { 'dependencies: { cid' + this.x-requested-requested-s' + this.pkg-s' + this.message : { provides: this.x-requested-s : this.id }}"); return this.x-s', this.message, "x-requested-s' : this.message : this.message, "x-requested-s' : this.message" });
6 2 return this.discard();     : this.discard(); });
6 3 }.bind(this);\
7 1  resolved : { " }}"); };" });
7 2 this.reportErrors.push(this.push(this);"me: this.emit('install');" : this.emit('install');       : 'install');
8 1  resolved : '^' });"require(this.request', this.query: this.xhracking')(this.xhracking') };" : this.dispose });
8 2 return this; this;
9 1  '~' + (require'require) {}) }}).join(this.resolve, '*') }).join(this.resolve, '*');
9 2 this.emit('commit: this');
9 6 };
9 7 this.trackDecompareDecomposedLoading = function () {};
9 8 var resolved = function resolved() {
9 10 return this.uninstall();
