Min editdistance: 12.00
Closest candidate: 5 25 var swig = require('swig');
0 1 var fs = util.fs;
0 2 var yfm = require('hexo-front-matter');
0 3 var escape = util.escape;
0 4 var rEscapeContent = /<escape(?:[^>]*)>([\\s\\S]+?)<\\/escape>/g;
0 5 var rUnescape = /<hexoescape>(\\d+)<\\/hexoescape>/g;
0 6 var preservedKeys = {
0 7 title: true,
0 8 slug: true,
0 9 path: true,
0 10 layout: true,
0 11 date: true,
0 12 content: true
0 13 };
0 14 swig.setDefaults({
0 15 autoescape: false
0 16 });
0 17 function Post(context){
0 18 this.context = context;
0 19 }
0 20 Post.prototype.create = function(data, replace, callback){
0 21 if (!callback && typeof replace === 'function'){
0 22 callback = replace;
0 23 replace = false;"

1 3 var rUnescape = /<hexoescape>(\\d+)<\\/hexoescape>/g;"

2 2 var rEscapeContent = /<escape(?:[^>]*)>([\\s\\S]+?)<\\/escape>/g,"

3 5 var rSwigVar = /\\{\\{[\\s\\S]+?\\}\\}/g;
3 6 var rSwigComment = /\\{#[\\s\\S]+?#\\}/g;
3 7 var rSwigBlock = /\\{%[\\s\\S]+?%\\}/g;
3 8 var rSwigFullBlock = /\\{% *(.*?) *.*?%\\}[\\s\\S]+?\\{% *end\\1 *%\\}/g;
3 9 var placeholder = '\\uFFFC';
3 10 var rPlaceholder = /(?:<p>)?\\uFFFC(\\d+)(?:<\\/p>)?/g;
3 28 replace = false;
3 30 var ctx = this.context;
3 31 var config = ctx.config;
3 32 data.slug = slugize((data.slug || data.title).toString(), {transform: config.filename_case});
3 33 data.layout = (data.layout || config.default_layout).toLowerCase();
3 34 data.date = data.date? moment(data.date) : moment();
3 35 return Promise.all([
3 36 ctx.extend.filter.exec('new_post_path', data, {
3 37 args: [replace],
3 38 context: ctx
3 39 }),
3 40 this._getScaffold(data.layout)
3 41 ]).spread(function(path, scaffold){
3 42 data.title = \'"\' + data.title + \'"\';
3 43 data.date = data.date.format(\'YYYY-MM-DD HH:mm:ss\');
3 44 var split = yaml.split(scaffold);
3 45 var content = swig.compile(split.data)(data) + \'\
3 46 \';
3 47 var compiled = yaml.load(content);
3 48 var compiledMatch = term.match(scaffold);
3 49 if (!compiled) return;
3 50 var keys = Object.keys(data);
3 51 var key = \'\';
3 52 var obj = compiled;
3 53 for (var i = 0, len = keys.length; i < len; i++){
3 54 key = keys[i] = obj[i];
3 55 if (!preservedKeys[key] = obj[key] = obj[key].set(key, data[key] || generateType, generateType(data[key]);
3 57 if (result.layout == null || layout == null) result = layout;
3 58 return result;
3 61 if (layout = layout == null){
3 62 return layout;
3 63 return layout = layout == null? \'layout
3 64 } else {
3 65 return layout : layout;
3 69 Post.prototype.create, Post.remove = function(layout){
3 71 Post.create.remove = function(layout){
3 73 Post.create.create, create.remove = function(layout){
3 75 var deleted = function deleted = archive
4 3 var yfm = util.yfm;
4 4 var escapeContent = util.escapeContent;
5 2 var rEscapeContent = /<escape(?:[^>]*)>([\\s\\S]+?)<\\/escape>/g,
5 3 rLineBreak = /(\
5 4 (\\t+)){2,}/g,
5 5 rUnescape = /<notextile>(\\d+)<\\/notextile>/g;
5 6 var config = hexo.config;
5 7 var scaffolds = {
5 8 post: [
5 9 'title: {{ title }}',
5 10 'date: {{ date }}',
5 11 'tags:',
5 12 '---'
5 13 ].join('\
5 14 ') + '\
5 15 ',
5 16 page: [
5 22 '
5 24 module.exports = function(data, callback){
5 25 var swig = require('swig');
5 26 swig.init({tags: data.tags});
5 27 if (data.length){
5 28 var content = data.content;
5 30 var content = body;
5 32 var tabs = data.tags.toString();
5 33 for (var i = 0, len = tabs.length; i < len; i++){
5 34 var item = tabs[i];
5 35 if (rEscapeContent.test(item)){
5 36 var indent = item.match(rEscapeContent);
5 37 if (indent){
5 38 item = indent + item.length + '\
5 39 ';
5 41 item = text.replace(rEscapeContent, \'\
5 42 \');
5 45 var result = swig.compile(content);
5 46 if (result.match(regex.excerpt)){
5 47 result.more = content.replace(regex.excerpt, \'<span id="more"></span>\');
5 52 };"

6 5 rUnescape = /<hexoescape>(\\d+)<\\/hexoescape>/g;"

7 7 var yfm = new yaml.parse(escape);
7 9 var yfmSync = require('hexo-front-matter');
7 11 var rEscapeContent = /<hexoescape>(?:<p>)?<\\/hexoescape>/g;
8 21 normal: [
8 22 'layout: {{ layout }}',
8 32 var config = this.config;
8 33 return swig.compile(data.text)(data);
