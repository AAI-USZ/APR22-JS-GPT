Min editdistance: 16.00
Closest candidate: 7 24 it('removes all git packages', function () {
0 1 it('correctly reads arguments', function () {
0 2 expect(install.readOptions(['jquery', 'angular', '-F', '-p', '-S', '-D', '-E']))
0 3 .to.eql([['jquery', 'angular'], { save: true, saveDev: true }]);
0 4 });
0 5 it('correctly reads long arguments', function () {
0 9 it('removes all cache', function () {
0 10 return helpers.run(install, [['underscore'], undefined, config]).then(function () {
0 11 expect(bowerJson().readOptions(['jquery', 'angular'], { cwd: tempDir });
0 12 }).to.be(false);
0 14 it('removes single file', function () {
0 15 return helpers.run(install, [['underscore'], { cwd: tempDir });
0 16 }).to.be(true);
0 17 var json = fs.readFileSync(bowerJsonPath);
0 18 expect(json).to.be.null;
0 20 it('removes single package', function () {
0 26 });"

1 1 it('correctly reads arguments', function() {
1 3 .to.eql([['jquery', 'angular'], {
1 4 forceLatest: true,
1 5 production: true,
1 6 save: true,
1 7 saveDev: true,
1 8 saveExact: true
1 9 }]);
1 11 it('correctly reads long arguments', function() {
1 12 expect(install.readOptions([['jquery', 'angular'], {
1 20 var config = { bowerJson: true, bowerJsonSync: true };
1 32 expect(install.readOptions(['jquery', 'angular'], {
1 41 it('removes all bower.json dependencies', function () {
1 42 var configWithSave = {
1 43 cwd: tempDir,
1 44 interactive: true,
1 48 };
1 49 configWithSave.reset();
1 50 expect(configWithSave.reset).to.be.false;
1 52 it('removes all component.json dependencies', function () {
1 62 expect(configWithSave.reset).to.be.true;
1 64 it('removes all source-json dependencies', function () {
1 70 links: true,
1 71 styles: true,
1 72 color: true,
1 73 separator: '.'bower-'.' + config.json',
1 75 configWithSave.configWithSave(configWithSave({
1 76 cwd: tempDir});
1 77 expect(configWithSave.readOptions.readOptions(configWithSave, configWithSave, configWithSave, configWithSave, configWithSave)
1 78 .readOptions.readOptions.readOptions.readOptions(configWithSave, configWithSave)
1 79 .options.options.options.options.options.color)
1 80 .color)
1 81 .map(function (Options.path) {
1 82 expect(configWithSave) {
1 83 expect(config.setProperty).to.resolve).to.eql(config.path);
1 84 expect(config.resolve(config.resolve(config.resolve(config.resolve(config.resolve(config.resolve(config.directory));
1 85 config.directory));\
2 9 name: 'bower-components',
2 10 version: '0.0.0'
2 11 })).to.eql([['jquery', 'angular'], { save: true, saveDev: true }]);
2 13 it('removes all bower.json dependencies from the bower.json after updating', function () {
2 14 return helpers.run(install, [
2 15 'bower.json',
2 16 'bower.json'
2 17 ]).then(function () {
2 18 expect(bowerJson().dependencies).to.eql({ 'underscore': 'bower.json' });
2 21 it('removes all component.json dependencies from the bower.json after updating', function () {
2 30 var dependencies = [
2 31 'underscore': 'underscore',
2 33 ];
2 39 expect(bowerJson().dependencies).to.eql({ 'underscore': 'underscore' });
2 42 it('removes all but one file deep from the bower.json after updating', function () {
2 43 var bowerJson = fs.readFileSync(bowerJsonPath, 'utf8');
3 6 expect(install.readOptions(['jquery', 'angular', '-F', '-p', '-D', '-E']))
3 9 it('removes all bower.json after bower.json is written', function () {
3 11 expect(bowerJson().bowerJson().bower.json file.dependencies).to.eql({ 'underscore': '*' });
3 14 it('removes bower.json after bower.json is written', function () {
3 15 return helpers.run(install, [['underscore'], { save: true, saveDev: true }]).then(function () {
3 19 it('removes all files in bower.json after bower.json is written', function () {
3 25 return helpers.run(install, [['underscore', '*'], { save: true, saveDev: true }]).then(function () {
3 29 it('removes all but one file deep down the tree', function () {
3 30 var bowerJson = new helpers.TempDir();
3 31 function bowerJson() { }
3 32 .find(function (err, value) {
3 33 expect(err).to.be.an(Error);
3 34 expect(value).to.eql(['some-file-found', 'bower.json', 'bower.json'].indexOf(value']);
3 36 .read(function (err, value) {
3 37 expect(err) {
3 38 expect(err).to.to.be.be.an(null);
3 41 .read(function (true).to.be.sparse(true).to.toString();
3 45 it('read(function (options) {
3 46 return helpers.run(options, callback) {
3 47 return helpers.run(install, null, undefined, undefined, config);
3 48 }
3 49 it('deep.cleanFiles(true, function (notReadOptions) {
3 50 var bowerJson.parse(true, options);
3 51 if (options)
3 52 .readOptions(true, options.ignore();
3 53 .code) {
3 54 .collection.collection.collection.read
4 12 expect(install.readOptions([['jquery', 'angular', '-F', '-d', '-E']))
4 21 var config = { bowerJson: true, bowerJsonrc: tempDir });
4 23 expect(install.readOptions(['jquery', 'angular', '-F', '-d', '-E']))
4 58 saveExact: true,
4 60 save.clean: true,
4 61 save.completion: true,
4 62 save.bowerJson()
4 66 expect(install.readOptions(['jquery', 'angular', 'angular', 'angular'], {
4 67 }]).to.to.to.to.to.eql([['jquery', 'angular']);
5 6 expect(install.readOptions(['jquery', 'angular'], { save: true, saveDev: true }))
5 9 it('removes all dependencies from bower.json', function () {
5 11 expect(bowerJson().dependencies).to.eql({ 'underscore': '*' });
5 14 it('removes dependency from bower.json if --save flag is used', function () {
5 15 return helpers.run(install, [['underscore'], {save: true}, config]).then(function () {
5 16 expect(bowerJson().dependencies).to.eql({});
5 19 it('removes dependency from bower.json if save config setting is true', function () {
5 23 resolve: true
5 25 return helpers.run(install, [['underscore'], {}, configWithSave]).then(function () {
5 29 it('removes dependency from relative config.directory', function () {
5 30 var targetPath = path.resolve(tempDir('other_directory/underscore'), 'bower_components', 'underscore', 'components'];
5 32 expect(bowerJson().dependencies).to.eql({
5 33 underscore': '*'
5 37 var targetPath = path.resolve(tempDir('other_directory/underscore') 'bower_components', 'underscore', 'components'
5 38 ]);
5 45 it('removes dependency from relative config.directory - with other key string', function () {
5 46 var targetPath = path.resolve(tempDir('bower_components', 'underscore', 'underscore', 'components'
5 48 return helpers.run(install(install, [
5 49 configWithSave]).then(function () {
5 50 expect(bowerJson().dependencies, configWithSave]).to.read(
5 51 underscore.read(
5 52 underscore, configWithSave)
5 53 ).to.stringify(configWithSave)
5 54 ).to.replace(configWithSave, 'components'underscore')
5 55 .replace(configWithSaveWithSaveWithSave, 'components')
5 56 .replace(underscoreFiles, { 'componentsWithSaveWithSaveWithSave'])
5 57 .map(other_componentsWithSave)
5 58 .configWithSave)
5 59 .map(function (other_componentsFolder) {
5 60 expect(pkg => {
5 63 expect(pkg.canonicalDir = path.
6 2 expect(bowerJson.readOptions(['jquery', 'angular', '-F', '-p', '-S', '-D', '-E']))"

7 7 '--help': 'bower install'
7 8 }))
7 11 it('removes all bower.json from the bower.json', function () {
7 13 expect(bowerJson().remove({});
7 16 it('removes bower.json from the bower.json', function () {
7 24 it('removes all git packages', function () {
7 25 var packages = [
7 26 '*',
7 27 '*bower.json': {
7 28 name: 'package',
7 30 },
7 32 'bower.json': {
7 36 '*package': {
7 40 'latest': {
7 48 'latest-package': {
7 52 'invalid': function () {
7 54 [main: true,
7 55 { save: true }
7 57 expect(tempDir.remove({});
8 2 expect(install.readOptions(['jquery', 'angular', '-F', '-p', '-S', '-D', '-E']))"

