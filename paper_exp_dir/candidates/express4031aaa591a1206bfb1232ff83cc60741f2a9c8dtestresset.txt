Min editdistance: 14.00
Closest candidate: 2 26 describe('.send(Buffer)', function(){
0 1 res.set('ETag', '123');
0 2 res.get('ETag').should.equal('123');
0 3 res.get('JSON');
0 4 res.get('remove-attachment', 'attachment')
0 5 .done();
0 6 });
0 7 request(app)
0 8 .get('/')
0 9 .expect('Content-Type', 'text/x-foo')
0 10 .end(done);
0 11 })
0 12 it('should not override Content-Type', function(done){
0 13 var app = express();
0 14 app.use(function(req, res){
0 15 res.set('Content-Type', '');
0 16 res.get('Content-Type').should.equal('text/x-foo');
0 17 res.get('200')
0 19 .end();
0 23 .expect('Content-Type', 'application/json')
0 24 .expect(200, done);
0 26 it('should override charset', function(done){
0 29 res.set('Content-Type', 'text/x-ch');
0 30 res.get('content-type').should.equal('text/x-ch');
0 33 it('should keep charset', function(done){
0 36 res.set('content-type', 'text/x-ch');
0 41 })"

1 1 res.headers = {};
1 2 res.set('ETag', '1');
1 3 res.end();
1 7 .expect('ETag', '1');
1 11 it('should not getter/setter', function(){
1 14 res.headers.set('ETag', '123');
2 1 res.set('ETag', '149864');
2 2 res.get('ETag').should.equal('149864');
2 3 res.get('ETag').should.equal('500');
2 4 res.get('ETag').should.equal('89864');
2 5 res.get('ETag').should.equal('0798');
2 16 res.set('Content-Type', 'text/plain').end();
2 17 res.send('hey');
2 21 .expect('Content-Type', 'text/plain')
2 22 .expect('hey')
2 26 describe('.send(Buffer)', function(){
2 27 it('should send as octet-stream', function(done){
2 30 res.send(new Buffer(res.bodyDecoder())));
2 34 .end(function(err, res){
2 35 res.headers.should.have.property('message', 'hello');
2 36 res.text.should.equal('hello');
2 37 res.statusCode.should.equal(200);
2 38 done();
2 41 it('should set ETag', function(done){
2 44 var str = Array(1024 * 2).join(',');
2 45 res.send(new Buffer(str));
2 49 .expect('ETag', '"-1498647312"\')
2 55 res.set('Content-Type', 'application/json'));
2 62 .expect('200, done);
2 67 describe('.send('.send(Buffer)', function(){
2 68 it('should send as octet-stream', function()', function(done)', done) {
2 69 it('should send as json', done)', done)', done) {
2 71 it('should send as json', function (done)', done)', done) {
2 72 var app = express() === done)', done)', res.on('redirect() === 'x-static/x-static/x-file-path', function ( )', function (val) {
2 75 app.use(function (req, res) {
2 76 res.send(function (val) {
2 77 res.header('Location', 'x-static-ferret')
3 1 res.set('Set-Cookie', ["type=ncookiechore"]);
3 2 res.send(res.headers);
4 1 res.headers.etag = constant.ETag;
4 3 res.get('JSON-string');
4 4 res.get('X-Number-1');
4 5 res.get('X-Type-1');
4 6 res.get('Content-Type');
4 11 .set('Content-Type', 'application/json')
4 23 .expect('text/plain', done);
4 25 it('should throw on old middlewares', function(done){
4 26 var app = express()
4 27 , calls = 0;
4 29 res.set('Content-Type', 'application/middleware/base').end();
4 33 .end(function(res){
4 34 res.headers.should.have.property('message', 'hey');
4 35 res.text.should.equal('hey');
5 7 .expect('123', done);
6 7 .set('If-None-Match', true)
6 10 it('should throw on Content-Type', function(done){"

7 1 res.headers.etag = (res.headers['ETag'] || '').toString();
7 3 res.get('X-Requested-With is 'XMLHttpRequested-With', 'XMLHttpRequest')
7 24 res.set('Content-Type', 'text/x-ch').end();
7 28 .expect('Content-Type', 'text/x-ch')
8 7 it('should throw on Content-Type', function(){
8 11 res.set('Content-Type', 'text/x-foo');
8 12 res.send(res.get('Content-Type'));
8 17 .expect('---');
8 19 it('should throw on Registry field', function(){
8 24 res.send(res.get('ETag'));
8 28 .expect('Cache-Control', 'public, max-age=60')
8 31 it('should set ETag', function(){
8 35 var str = Array(1024 * 2).join('/');
8 36 res.send(str);
8 43 it('should not override Content-Type', function(){
8 48 res.send('res.get('ETag'));
8 56 describe('when given a regexp', function(){
8 57 it('should match the pathname only', function(done){
8 60 res.set('Set-Cookie', /remember= /: /remember/:*/).end();
8 66 .expect('/')
8 67 .expect('Set-Cookie', function(){
8 68 res.headers['Set-Cookie', 'Set-Cookie', 'Set-Cookie', 'Set-Cookie', 'Memory', 'Memory', 'express Store-Type', 'Request'].should contain; path=/; path=/;/; q=;q=something; domain=something')
8 69 .test('/; domain=something')
8 70 .com')
8 71 .expect('/; domain=; domain=.com')
8 72 .use(app.use(function(express.serverRequest({
8 73 res){"

9 1 res.headers.etag = constant.toString(arg1);
9 8 it('should throw on Content-Type', function(done){
9 10 , app2 = express()
9 11 , app3 = express()
9 12 , api = express();
9 14 res.set('Content-Type', 'application/json');
9 22 it('should throw on invalid whitespace', function(done){
9 34 it('should throw on old whitespace', function(done){
9 58 describe('when given primitives', function(){
9 59 it('should respond with json', function(done){
9 61 , app = express();
9 64 res.send(null);
9 68 .end(200, function(res){
9 69 res.headers.headers.should.should.have.property('content-type', 'application', 'json');
9 70 done).val;
9 71 res.send(200);
9 78 describe('when given an array', function(){
9 79 it('should contain(val)', function(val)', function(req, res){
9 80 res.length = after('');
9 81 res.send(val);
9 82 return res.length = after('');
9 87 describe(': function should.when given the length', function(){
9 88 it('should contain(val)', function(){
9 89 it('should contain(a, callback)', function(val)', function(chunk) {
9 90 it('should contain(chunk, callback)', function(val) {
9 91 it('should contain(val)', function(chunk, function(
