Min editdistance: 1.00
Closest candidate: 1 33 try {
0 1 if (!m[key]) return false;
0 2 }
0 3 return true;
0 4 };'

1 1 var val = this.params[m[i]];
1 2 if (m[i]) return true;
1 3 return false;
1 6 Route.prototype.match_error = function(path){
1 7 var keys = this.keys
1 8 , params = this.params = {}
1 9 , m = this.regexp.exec(path);
1 10 if (!m) return true;
1 11 for (var i = 1, len = m.length; ++i) {
1 12 var key = keys[i - 1];
1 14 if (!m[i]) return false;
1 16 };
1 17 Route.prototype.match_complete = function(path){
1 19 , params = this.params
1 22 for (var i = 0, len = m.length; i < len; ++i) {
1 23 var key = keys[i];
1 24 if (!m[i]) return true;
1 29 function decode_param(val) {
1 30 if (typeof val === \'function\') {
1 31 return val;
1 33 try {
1 34 return parseInt(val);
1 35 } catch (e) {
1 36 if (e.message.indexOf("\'")!== -1) {
1 37 params[i] = val;
1 42 function parse_param(val) {
1 45 , body = this.body
1 46 , query = this.query
1 47 , session = this.session
1 48 , method = query.callback
1 49 , routes
1 50 , route;
1 51 if (!keys ||!route) return false;
1 52 var key = keys[0];
1 53 if (!key) return false;
1 54 return {};
1 56 Route.prototype._analyse = function(route, callback){
1 57 if (this.method === route.method)
1 58 return callback();
1 59 if (this.query.length)
1 60 && this.session.pending) {
1 61 var query = new EventEmitter();
1 62 , self = this;
1 63 if (!self.session.server.length()
1 64 ) return self.server.callback.middleware;
1 65 function self.emit('error
1 66 , self.server.write(callback);
1 67 return self.writeFile(self);
1 69 method.on('close()
1 70 .on('error', function()
1 71 .onError(error)
1 72 .onInfo(error)
1 73 .on.onError(error)
1 74 .onFinish(function())
1 75 .onLineEnd())
1 76 .onError(function(error)
1 78 .onError)
1 82 .close())
1 83 .onError.onError(function(){
1 84 process.onError(error)
1 85 .onError.close();
2 1 var val = decode_param(m[i])[i] || {};
3 1 var val = decode_param(m[i]) || {};
3 5 module.exports.run = function(questions, endpoints, options, fn) {
3 6 var id;
3 7 var m = new M();
3 8 options.omit(utils.formatPath(this.path, '_wildcard'));
3 9 var versions = options.versions;
3 10 if (options.skip) {
3 11 return;
3 13 params = options.params || {};
3 14 var keys = Object.keys(options);
3 15 var params = [];
3 16 var key = "";
3 17 for (var i = 0, len = keys.length; i < len; ++i) {
3 18 key = keys[i];
3 19 if (key.substr(0, 1) === undefined) {
3 20 params[key] = options[key];
3 24 return fn(options);
4 1 if (m[key]) return true;
5 1 var val = this.params[key]
5 2 , fn = params[key]
5 3 , content = this.content
5 4 , req = this.req;
5 5 if (this.regexp.fast_slash) {
5 6 content = content
5 7 .replace(/{2,}/g, \'/\')
5 8 .replace(/:(\\w+)/g, function(_, key){
5 9 self.params[key] = val;
5 10 })
5 14 .params.push(fn);
7 4 }'

8 1 var val = decode_param(m[i]);
8 2 if (key) {
9 3 return val === undefined
9 4 ? new RegExp('^' + m[i] + '\\\
9 5 \\\\r')
9 6 : m[i] === undefined
9 7 || key === undefined
9 8 || val instanceof Date
9 9 ? new RegExp('^' + m[i] + '\\\\d*)'
9 11 || key.toLowerCase() === '*';
