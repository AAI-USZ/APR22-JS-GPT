Min editdistance: 15.00
Closest candidate: 1 17 .get('/')
0 1 .end(function(res){
0 2 done();
0 3 })
0 5 })"

1 3 });
1 5 it('should not be influenced by other app protos', function(done){
1 6 var app = express()
1 7 , app2 = express();
1 8 app.response.shout = function(str){
1 9 this.send(str.toUpperCase());
1 10 };
1 11 app.use(function(req, res){
1 12 this.response.shout += '\
1 13 app2\
1 14 ';
1 16 request(app)
1 17 .get('/')
1 19 res.body.should.equal('foobar');
3 12 app.response.pout = function(str){
3 13 this.send(str);
3 15 app.response.qout = function(str){
3 18 app.get('/')
3 20 var err = get('Something-Else') || {};
3 21 err.shout("default");
3 22 if (err) throw err;
3 24 res.shout('hey');
3 29 res.headers.should.have.property('content-type', 'text/html; charset=utf-8');
3 33 it('should not override Content-Type', function(done){
3 34 var app = express();
3 36 res.header('Content-Type', 'text/plain');
3 37 res.writeHead(200, str.toString());
3 38 res.end();
3 43 res.headers.should.have.property('content-type', 'text/plain');
6 14 app.use(function(err, req, res){
6 15 res.shout('other');
8 2 res.body.should.equal('HEY');
8 12 app2.response.shout = function(str){
8 18 app.app.response.code.should.equal('hexo');
8 19 app.response.message.should.equal('hey');
