Min editdistance: 1.00
Closest candidate: 2 1 options.context = options.context || this
0 1 ,
0 2 locals = options.locals || {},
0 3 self = this,
0 4 options.locals._content = this.partial('content', config.html, options.locals)
0 5 self.halt(200, content)
0 6 })
0 7 }
0 8 })"

1 2 locals = {
1 3 body: content
1 6 if (set('cache view contents'))
1 7 self.render(layout, options)
1 8 } else
1 13 })'

2 1 options.context = options.context || this
2 2 self.contentType(ext)
2 3 function render(content) {
2 4 content = engine[type].render(content, options)
2 5 if (layout)
2 6 self.render(layout + '.' + type + \'-html.render(content))
2 9 return render(content)
3 4 options.locals
3 5 );
3 6 var posts = this.app.dynamicHelpers({
3 7 posts: posts
3 8 });
3 9 for (var i = 0, len = posts.length; i < len; i++) {
3 10 var _id = posts[i].id;
3 11 if (layout) post.layout = 'post';
3 12 if (posix.config.siteRoot + post.layout + 1). set(\'root\', self.url.replace(/\
3 13 $/, \'/\') + \'/\')
3 14 .expect(\'Post created at http://localhost:3000/%2Fbar\', posts, {
3 15 _id: _id,
3 16 layout: \'post\',
3 17 locals: posts
3 24 return new this.app.render(layout, posts, options);
4 6 self.render(layout + '.' + type + '.' + ext, process.mixin(true, options, {
4 7 layout: false,
4 8 locals: {
4 11 }))
4 12 else
5 3 content = engine[ext].render(content, options)
5 5 self.render(layout + '.' + ext, process.mixin(options, {
5 14 if (set('cache view contents') && self.cache.get(path))
5 15 render(self.cache.get(path))
5 17 posix.cat(path).addCallback(function(content){
5 18 set('cache view contents')?
5 19 render(self.cache.set(path, content)) :
5 20 render(content)
5 21 }).addErrback(function(e){
5 22 throw e
6 1 options[layout] = ext
6 2 return this.render(layout)
6 3 }, {})
6 4 }'

7 3 self = this;
7 4 return this.render(layout, options)
7 5 }, this).join(\'\
7 6 \') + \', \')
8 6 self.render(layout + '.' + type + \'.html\')
8 9 return content
9 6 self.render(layout + '.' + type + \'-html.js')
9 8 self.render(content)
