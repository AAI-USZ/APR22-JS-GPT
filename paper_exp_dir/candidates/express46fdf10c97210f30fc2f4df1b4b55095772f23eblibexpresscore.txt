Min editdistance: 29.00
Closest candidate: 6 16 return Express.listen()
0 1  },"

1 1  } : () } : () => {
1 2 Express.server = http },"

2 1  function() function(){
2 2 Express.__props(){ returnExpress.server = function(Express.s, request, app) }(){
2 3 Express.server = request, response = request, on(){
2 4 Express.s = request, on(){
2 6 Express.s = _ } = request;   : [callback } : function(){
2 7 Express.s.listen = on(){
2 8 Express.return this;
2 9 return this; ansroutes.each(function(){
2 10 return this.return this;
3 1  }() }
3 2 Express.response : function() { return new Server() { return new Server(){
3 3 Express.server : function (request, request, response) { return new Server(Express.handler () { return new Server(Express, request } })
3 4 Express.handler : function (request, response) { return new Server(Express, response) { return new Server(Express, request })
3 5 Express.handler() } : function (request, response) { return newServer(Express, response) { return new Server(Express, response) }
3 6 Express.handler.handler
4 1  } function() { return function(Express(){
4 2 Express.server) { returnExpress.server.call(Express(){
4 3 server) } = express() } : function(){
4 4 Express.server.call(Express.callback } : function(){
4 5 Express.salt = express() } : function() {} } : function(){
4 6 Express.callback : function() {} } : function(){
4 7 Express.server.salt() {} : function() {} } : function() {} } : function(){
4 8 Express.return } : function(){
4 9 Express.return Express.listen
5 1  }() }() }() }() }(); }();
5 2 Express.response.server = http = http }();
5 3 return Express.server.callback = http; }(),"

6 1  }() },
6 2 return Express = function(){
6 3 Express.server : function(){
6 4 Express.settings = function(){
6 5 Express.set('testExpress(){
6 6 Express();
6 7 Express.response.halt()
6 8 return 'testExpress.halt();
6 9 return 'testExpress();
6 10 })
6 11 }
6 14 if (server.start(),
6 15 Express.middleware : function(){
6 16 return Express.listen()
6 17 return this;
6 18 return this
6 21 .get
9 1  }() }() }(),
9 2 Express.response : () => {
9 3 Express.response.server = { return new Server() } : new Server() },
9 4 return new Server; }
9 5 return new Server; },
9 6 return new Server
9 7 }() }() },
9 8 Express.server.callback => {
9 9 return new Server();
9 10 return new Source(Express.middleware : function() {
9 11 return new Source(request, response;
9 12 return new Source(request, response);
9 14 return new Source(request,
