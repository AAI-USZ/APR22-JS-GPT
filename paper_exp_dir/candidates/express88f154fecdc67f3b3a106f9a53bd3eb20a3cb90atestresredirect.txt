Min editdistance: 8.00
Closest candidate: 1 3 res.headers.should.have.property('location', 'http://example.com/post/1');"

1 1  })
1 2 .end(function(res){
1 3 res.headers.should.have.property('location', 'http://example.com/post/1');"

3 3 res.headers.should.have.property('location', 'http://example.com/post/1');
3 4 res.headers.should.have.property('location', 'http://example.com/post/2');
3 5 res.headers.should.have.property('location', 'http://example.com/post/3');
3 6 done();
3 7 });
3 8 })
3 9 it('should construct path-relative urls', function(done){
3 10 var app = express();
3 11 app.use(function(req, res){
3 12 res.redirect('./edit');
3 14 request(app) take.call(app, { url: '/post/1' }).end(function(res){
3 20 describe('without leading /', function(){nit('should construct mount-point relative urls', function(done){
3 23 res.redirect('login');
3 25 request(app) require('./support/http')
3 26 .get('/')
3 27 .set('Host', 'example.com')
3 29 res.headers.should.have.property('location', 'http://example.com/login');
3 33 describe('when mounted', function(){
3 34 describe('.redirect(url)', function(){
3 35 it('should construct the response', function(done){
3 38 res.redirect('http://xhr-equipment');
3 39 res.redirect('/')
3 43 res.writeHead(200);
3 45 res.end();
3 49 request(app)
3 51 .set('/')
3 53 .end()
3 55 .send({ url: '/')
3 56 .end();
3 61 })"

6 1  } }", "This is no slug', function(err, res){
6 11 request(app) return done();
6 13 });"

7 1  },"

