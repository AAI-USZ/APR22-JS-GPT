Min editdistance: 19.00
Closest candidate: 0 1  escape: config.line_number});
0 1  escape: config.line_number});
0 2 content = content.replace(/{/g, \'&#123;\')'

1 2 content = content.replace(rLang, function(){
1 3 lang = arguments[1];
1 4 return \'<notextile>\' + content + \'</notextile>\';
1 5 });
1 14 content = content.replace(rComment, function(){
1 17 content = content.replace(rFirstLine, function(){
1 18 firstLine = arguments[1];
1 21 content = content.replace(rMarkdown, function(){
1 22 markdown = arguments[1];
1 26 markup = arguments[0];
1 27 return \'<notextile>\' = content.split(\'\
1 28 \').join(\'\
1 30 \').join(\'\');
1 32 content = content = content.replace(rMarkdown = content.join(\'\');
1 33 return content.join(\'\');
1 35 content = content = content;'

2 4 return \'<a href="\' + match[2] + match[3] + \'">\' + match[4] + \'</a>\';
2 6 content = content.replace(rAllOptions, function(err, content){
2 7 if (err) return \'<a>\' + content + \'</a>\';
2 8 return content;
2 12 return \'<a href="\' + match[3] + \'">\' + match[4] + \'</a>\';
2 14 content = content.replace(rAuthorTitle, function(err, content){
2 15 assert.equal(content, \'<a href="\' + match[1] + \'">\' + match[2] + \'</a>\');
2 16 assert.equal(content, \'<a href="\' + match[3] + \'">\' + match[4] + \'</a>\');
2 18 content = content.replace(rAuthor.remove();
2 20 content = content.replace(rAuthorTitle, function(rAuthor) {
2 21 assert.equal(content, \'<a href="\'<a href="\' + match[\' + match[1] + match[2] + \'">\'s/\'s/\' + match[3] + match[4] + match[5] + \'</a>\'s/\');
2 23 content = content = content.replace(rAuthor.join());
2 24 return content.replace(rAuthor.remove()
2 26 content = content = content.replace(rAuthor.join(\'\', \'\', \'<a>\');
2 27 }
2 28 };'

3 1  escape: config.hljs, escape: config.filename_case});
3 2 content = content.replace(/{2,}/g, \'&#123;\');
3 3 content = content.replace(/}/g, \'&#125;\');
9 2 content = content.replace(/{/g, \'&#123;\')
9 3 .replace(/}/g, \'&#125;\');
