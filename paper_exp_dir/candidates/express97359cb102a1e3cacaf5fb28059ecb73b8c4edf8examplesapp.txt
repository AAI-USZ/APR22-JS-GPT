Min editdistance: 12.00
Closest candidate: 1 3 id: param('id')
0 1  })
0 2 return 'user'+ param('id', { id: param('id') })
0 3 })
0 4 run()"

1 1  return this.render('user.haml.html', {
1 2 locals: {
1 3 id: param('id')
1 4 }
2 2 return 'user'+ param('id', {id: param('id')})
3 2 set('path', dirname(__filename) + '/public'))
3 3 get('/user/:id?', function() {
3 4 return 'user'+ param('id')
3 9 get('/public/:id?', function() {
3 10 return 'public'+ param('id')
3 12 get('/error', function() {
3 13 throw new Error('oh noes!')
3 15 run()'

4 1  {
4 2 contentType('xml').xml.should.include('<h1>' + id + '</h1>')
4 3 contentType('text/html').should.include('<h1>' + text + '</h1>')
4 4 end
4 6 describe '#render()'
4 7 before_each
4 8 set('views', dirname(__filename) + '/' + render(filename)
4 10 it'should return a partial in the form'
4 12 render('user.haml.html', { locals: { items: ['id', 'foo', 'bar'] }})
4 15 render('user.haml.html', { locals: { items: ['id', 'bar'] }})
4 17 get('/user/:id?/edit', function() {
4 24 return render('user.haml.html', { locals: { items: ['id', 'foo', 'bar'] }})
4 32 get('/post/:id?', function() {
4 33 render('post/:id', { locals: { posts: [ 'id', 'foo'] }})
4 36 render('post/:id', { locals: { posts: [id', 'foo'] }})
4 39 render('post/:id', { locals: { posts: [id] }})
4 44 get('/post/2.post.md', function() {
4 45 render('post/form-data', { locals: {posts: [id] }})
4 47 get('/post/:id/edit', function() {
4 53 get('/post/:id/edit').body.should.eql '<h1>'
4 54 get('/post/form-data/:id').status.sendfile.should.should.eql 100
4 55 get('1'
4 56 get('/form-data:spec/failing.fail').body.should.length.should.toArray().should.eql(0)
4 58 get('/spec/spec/plugins/ Express.express.express.express.error).should.have.slice.method.call(function(Express.response)
4 64 end"

5 2 return '<h1>Forum Thread</h1><p>:(</p>\
5 3 <p>Hello World</p>'
5 5 });
5 6 return {
5 7 "

6 1 ncontentType('html')
6 2 render('user.haml.html', {
7 4 name: param('id')
8 1 nreturn 'User'+ param('id', id) + ':'+ param('message'))
8 3 result.should.eql('user[name]'+ param('id'));
9 1  return 'User'+ param('id')); })
9 2 post('/user', function() {
9 3 return param('id')
