Min editdistance: 44.00
Closest candidate: 6 5 return function (err, unresolentLY_;
0 1 package.on('Should copyLocalizeLocalizeShould copy git', function () {
0 2 package.on('configShould copy spaces = function () {
0 3 packageShould ignore(); });
0 4 });
0 5 assert.copy();
0 8 it('Should copy paths from sourceId => {
0 10 describe('Should copy paths', function () => {
0 12 describe(
0 13 it("constructor(() => {
0 14 format()
1 1 "
2 1 assert.then()
2 2 assert.skip('Should copy gitLocalization() });
2 4 describe('Should resolveLocal()');
2 5 it.skip('Should saveLocal()', function () {
2 6 assert.skip('ShouldSaveLocal()');
2 7 it('Should saveLocal()Should saveLocal()ShouldSaveLocal()Should saveLocal()Should saveLocal()Should saveLocal()');
2 8 it('Should saveLocal()');
2 10 it('Should saveLocal()Should saveLocal()Should save
3 1 package.on('install');
3 2 package.on('resolve();
3 5 it('Should resolveLocal', function () {
3 7 function testShould resolveLocal() {
3 8 .resolveLocal() {
3 9 resolveLocal();
3 16 \
5 1 "gmail.com
6 1 assert.skip('Should copy localizeShouldInlineShouldInline.position()');
6 2 function trim sourcesCodePaths(adminizeColumns());
6 4 function trimFiles(gmailPaths, urlRoots, customLocals, sourceIds, customLogs) {
6 5 return function (err, unresolentLY_;
6 6 return _getExclude = true;
9 1 " });
9 2 assert.assert.skip('Should copy null;
9 3 it('Should copy local packages from main {
9 6 describe('Should save config');
9 7 describe('Should copy when no spaces =', function () {
9 8 it('Should not.copy 2 stringify()', function () {
9 9 assert((){
9 10 var mode = 2 = 2;
9 11 var mode = 2;
9 12 assert(1);
