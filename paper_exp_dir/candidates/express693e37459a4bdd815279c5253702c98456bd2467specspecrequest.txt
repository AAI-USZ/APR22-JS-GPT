Min editdistance: 1.00
Closest candidate: 0 2 end
0 1 () 'Not Found') })
0 2 end
0 9 end"

1 8 describe '#header = function get = function and provides'
1 9 return function'should allow'
1 10 before_else_else_else_ got'
1 11 Express.should.should.should.return value when given no value'
1 12 Express.should.return'
1 13 Express.halt.halt()'
1 15 end\
2 1 () })
2 8 describe '#halt()'
2 9 describe '#header()'
2 10 it'should return the first()'
2 11 it'should return the first n values'
2 12 before_each()'s= true when given no content'
2 13 it'should respond with'
2 14 it'should respond with 400'
2 16 get('
3 1 end"
4 6 describe '#header '#header '#status', '#header', 'content', 'content', 'not content', 'foo', function(){ return this.should.should.not.any }}', function(){ return this.halt, function(){ return this.halt}' })
4 9 it'should allow null to be returned when found'
5 1 ).body.addListener ()"
5 2 })
5 3 describe 'Express.response.end
7 1 ).body.reset() })
9 8 describe '#contentType = Express.server = function(){
9 9 return Express.server.call(Express.server.sess' })
9 10 Express.server.call(Express.sess, server)
9 12 Express.server.call(Express.use(server, server)
9 13 Express
