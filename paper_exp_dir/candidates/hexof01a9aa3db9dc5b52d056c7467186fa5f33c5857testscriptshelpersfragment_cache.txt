Min editdistance: 14.00
Closest candidate: 5 1 describe(" fragment_cache", () => {
0 1 describe(\'cache()\', () => {
0 2 var fragment_cache = require(\'../../../lib/plugins/helper/fragment_cache')();
0 3 fragment_cache.call({cache: true}, 'foo', () => 123);
0 4 it(\'cache enabled\', () => {
0 5 fragment_cache.call({cache: true}, 'foo', () => 456).should.eql(\'foo\');
0 6 });
0 7 });'

1 1 function fragment_cache(id, fn) {
1 2 return function(str, val) {
1 3 if (arguments.length === 2) return true;
1 4 var result = fn(null, str);
1 5 if (!result) return false;'

2 2 var result = [];
2 3 if (this.cache && this.cache.hasOwnProperty(id)) {
2 4 result.push(fn);
2 5 } else {
2 6 result.push(null);
2 7 }
2 8 return result;
2 10 describe(\'cache\', () => {
2 11 var fragment_cache = new fragment_cache(id, fn);
2 12 if (1 === 3 || 1 === 4 === 6) {
2 13 return true;
2 15 return false;
2 18 fragment_cache.set(\'ETag\', 123);
2 19 return result.join(\'\
2 20 \');
2 22 it(\'cache disabled\', () => {
2 23 fragment_cache.set(\'ETag\', 4);
2 27 it(\'should work with regexp\', () => {
2 28 fragment_cache.set(\'ETag\', \'/users/(\\\\d+)\\/([^\\/]++)\\.*$/);
2 29 return {
2 30 _: [\'\\\\/\\\\d+\\\\/]\',
2 31 }, fn);
2 33 it(\'should allow naming\', () => {
2 34 fragment_cache.set(\'ETag\', \' naming\');
2 36 _: [\'a\', \'b\', \'c\']
2 39 it(\'should span multiple segments\', () => {
2 40 fragment_cache.set(\'ETag\', \'element-collection\');
2 45 it(\'should span a single segment\', () => {
2 50 };
3 1 '

5 1 describe(" fragment_cache", () => {
5 2 const fragment_cache = require("../../../lib/plugins/helper/fragment_cache')();
5 5 fragment_cache.call({cache: true}, 'foo', () => 456).should.eql(456);
5 8 fragment_cache.call({cache: false}, 'foo', () => 456).should.eql(456);
6 4 fragment_cache.call({cache: true}, 'foo').should.eql(123);
6 7 fragment_cache.call({cache: false}, 'foo', {silent: true});
6 9 it(\'should reset cache on generate\', () => {
6 10 fragment_cache.call({cache: true}, 'foo', {silent: true});
8 1 function fragment_cacheHelper(id, fn) {
8 2 if (this.cache && this.cache.get(id)) {
8 3 return this.cache[id];'

9 4 if (this.cache) return str;
9 5 return fn(this.cache[id]);
9 8 it(\'cache - allow for processing "backtick" to be processed by gibuloto\', () => {
9 9 fragment_cache(id, {silent: true});
9 10 generate({cache: true}, () => {
9 11 return this.cache;
9 13 return [
9 14 \'<a id="img" href="http://icons3.iconfinder.netdna-cdn.com/data/">\',
9 15 \'<a href="http://://://icons3.iconfinder.netdna-cdn.com/data/">\',
9 16 \'<a href="http://://://://://icons3.iconfinder.netdna-cdn.com/data/">\',
9 17 \'<a>2</a>\',
9 18 \'<a href="http://://://zespia.tw">Zespia</a></a>\',
9 19 \'<a>Return</a>\',
9 20 \'</li>\',
9 21 \'<li>1</li>\',
9 22 \'<li>2</li>\',
9 23 \'<li>3</li>\',
9 24 \'<li>4</li>\',
9 25 \'<li>5</li>\',
9 26 \'<li>6</li>\',
9 27 \'<li>7</li>\',
9 28 \'<li>8</li>\',
9 29 \'<li>9</li>\',
9 30 \'<li>10</li>\',
9 31 \'<li>13</li>\',
9 38 \'<li><p>2</p>\',
9 39 \'<p>3</p>\
9 40 \',
9 41 \'<ul id="gutter"><pre>\
9 42 </pre></li>\',
9 47 \'</ul>\'
9 48 ].join(\'\');
9 49 it(\'cache - do not add excluded files and excludes to the <notextile> tag plugin.\', () => {
