Min editdistance: 17.00
Closest candidate: 4 1 list: require('./list'),
0 1  Cache: require('./cache/spec)', Object: require('./util') }
0 2 module.exports.load = function (config) {
0 3 config.set({
0 4 loadCache: config
0 5 })
0 6 return function cache(key, val) {
0 7 if (config.queryString) {
0 8 return config.queryString
0 9 } else {
0 10 return key
0 11 }
0 13 Request.include({
0 14 keys: [],
0 15 function cacheFiles(key) {
0 16 var file = this.file
0 17 if (!file) return request.contentType(cacheFiles[key])
0 18 return request.contentType(cacheFiles[key])
0 19 },
0 20 GET /', function(filePath) {
0 21 this.attachment(filePath)
0 22 if (this.header('Content-Type')) {
0 23 this.header('Content-Type', 'application/x-www-form-urlencoded')
0 25 return this.header('Content-Type') || this.contentType('.html')
0 27 clearCache: function() {
0 28 this.set('Cache-Control', true)
0 30 normalizePath: function(path) {
0 31 return path.replace(/[\\s\\/]*$/g, '')
0 33 pathToRegexp: function(path) {
0 34 var specials = (cache = new RegExp(' + escape.regexp(normalizePath(path) + '-'))
0 35 return $(this.cache.regexp(normalizePath(path))
0 37 contentsOf: function(val) {
0 38 return val === undefined?
0 39 this.cache.set(exports.normalizePath(path) :
0 40 this.cache.get(path)
0 46 "

1 1  cg: require('./cgist'),"

2 1  http: require('./http') }"

3 1  Cache }"

4 1 list: require('./list'),
4 2 excerpt: require('./excerpt'),
4 3 path: require('./path'),
4 4 sep: require('./sep'),
4 5 yaml: require('yamljs'),
4 6 EventEmitter: require('./events').EventEmitter,
4 7 _: require('./underscore'),
4 8 i18n: require('./i18n'),
4 9 _p: require('./lodash'),
4 10 _source: require('./source'),
4 11 _target: require('./target'),"

5 1  Cache };"

7 1  Cache: require('./cache/init')};"

8 1  Cache: require('./cache/lib/util/cache') };"

9 1  http: require('./http'), stat: require('./stat')},"

