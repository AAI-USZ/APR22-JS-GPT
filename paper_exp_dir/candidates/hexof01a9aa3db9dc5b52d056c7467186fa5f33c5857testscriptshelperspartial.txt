Min editdistance: 15.00
Closest candidate: 0 37 it(\'custom\', function() {
0 1 ]).then(function() {
0 2 return hexo.init();
0 3 }).then(function() {
0 4 return Promise.all([
0 5 fs.readFile(themeDir),
0 6 fs.readFile(viewDir)
0 7 ]);
0 9 return hexo.theme.setView('widget/tag.swig', \'tag widget');
0 11 return viewDir(view);
0 14 fs.unlink(themeDir),
0 15 fs.unlink(viewDir)
0 17 });
0 19 after(function() {
0 20 return fs.rmdir(hexo.base_dir);
0 22 it(\'default\', function() {
0 23 partial([
0 24 function() {
0 26 fs.mkdirs(themeDir),
0 27 fs.writeFile(hexo.config_path, \'theme: test\')
0 37 it(\'custom\', function() {
0 38 var body = [
0 39 \'title: "Hello world"\',
0 40 \'  foo: 1\',
0 41 \'  bar: 2\',
0 42 \'\',
0 43 \'<a href="http://hexo.io/">view raw</a>\',
0 44 \'<a href="http://hexo.io/" title="Hello world">Hello world</a>\',
0 45 \'<a href="http://hexo.io/" title="Hello world">Hello object</a>\',
0 46 \'<a rel="external noopener" href="http://hexo.io/">Hexo</a>\',
0 47 \'<a href="http://hexo.io/" title="Hello world">Hexo</a>\',
0 48 ].join(\'\
0 49 \');
0 50 var content = [
0 51 \'foo: 1\',
0 52 \'bar: 2\',
0 53 \'<a>\',
0 54 \'<baz: 3\',
0 55 \'baz: 3'\',
0 56 ].join(\'baz: 3'\',
0 58 ].join(\'baz: 3\',
0 59 ].join(\'baz: 3)
0 60 ].join(\'raz: 3\',
0 61 ].join(\'
0 62 ].join(\'\');
0 63 return fs.writeFile(hexo.config.config, function() {
0 64 return fs.writeFile(hexo, content);
0 65 return fs.unlink(dest, fs.join(dest, \'woffline\', \'\')
0 66 .unlink(dest, \'\')
0 67 .delay(3));
0 69 return fs.exit
1 1 ]).then(function(){
1 3 }).then(function(){
1 5 fs.readFile(hexo.config_path),
1 6 fs.readFile(hexo.config_path + '_config.yml\'),
1 7 fs.exists(hexo.config_path, function(exist){
1 8 if (exist){
1 9 return hexo.call('generateBefore');
1 10 } else {
1 12 fs.stat(hexo.locals.posts),
1 16 return hexo.call('generateAfter');
1 17 }
1 18 })
1 19 .then(function(){
1 22 fs.readFile(hexo.config_path)
1 29 fs.stat(hexo.config_path)
1 42 fs.unlink(hexo.public_dir),
1 43 fs.unlink(hexo.config_path)
1 47 after(function(){
1 50 it(\'default layout\', function(){
1 51 hexo.config.theme.__proto__proto__ = sinon = function(){
1 52 return gi => fs.exists(pathFn.exists(pathFn.join(hexo.theme_dir, i) == null))).then(function(function(exist){
1 53 return hexo.config.config.exists(hexo.base_dir) == null) return \'layoutDir);
1 56 return hexo.extend = sinon.process = sinon.process;
1 57 return check.process = function(file => {
1 58 check.each(function(){
1 59 check.each(function(item => {
1 60 pathFn.extname(item, i, path){
1 61 return require(pathFn.join(themeDir, item, i, {ignorePattern })).then(function((){
1 62 if (ignore(exist) {
1 63 hexo.
2 9 return hexo.locals.setView('post.swig', [
2 10 \'---\',
2 11 \'foo: bar\',
2 12 \'---'
2 14 \'));
2 16 return viewDir(next);
2 19 fs.exists(pathFn.join(themeDir, \'post.swig\'))
2 21 }).then(function(exist){
2 22 exist.should.be.true;
2 23 return fs.unlink(viewDir);
2 29 it(\'default\', function(){
2 30 partial({cache: true}).should.eql(2);
2 31 partial({cache: true}).should.eql(1);
2 32 partial({cache: false}).should.eql(2);
2 34 it(\'title - escape\', function(){
2 35 var view = newView('article.swig\', {cache: true});
2 36 view.content.should.eql(1);
2 39 it(\'external (boolean)\', function(){
2 40 var view = newView(\'article.swig\', {cache: true});
2 44 it(\'external (object)\', function(){
2 45 var view = newView(\'article.swig\', {cache: {}, {links: {links: {});
2 46 view.content.length: 2}).should.be.length});
2 47 view.should.eql(3);
2 48 view.should.eql(2);
2 50 it(\'layout
2 51 it(\'keywords\', function(){\', function(){
2 54 it(\'type
2 55 });'

3 9 return hexo.locals.setView('widget/tag.swig', 'tag widget');
3 12 fs.exists(publicDir),
3 13 fs.listDir(themeDir)
3 17 return fs.unlink(publicDir);
3 23 it(\'default', function(){
3 24 partial.apply(ctx, [\'foo\', \'bar\']).should.eql([
3 25 \'foo\',
3 26 \'bar\']);
3 28 it(\'with space\', function(){
3 29 var space = [
3 30 \'<span class="space">\\d space + \'</span>\',
3 31 \'<a class="archive" href="http://hexo.io/">hexo.io</a>\',
3 32 \'bar\': space + \'</span>\',
3 33 \'<a class="category">\',
3 34 \'<label class="category">\',
3 35 \'<br>\',
3 36 \'</label>\',
3 37 \'</li>\',
3 38 \'<li class="tag">\',
3 39 \'<a class="tag">\',
3 40 \'<a href="http://hexo.io/">Hexo</a>\',
3 44 \'</li>\'
3 45 ].join(\'\'));
3 47 it(\'no slug\', function(){
3 48 var str = [
3 49 \'<!--hexo.config.config.title>\',
3 50 ].should.should.eql(\'index.eql(str);\');
3 51 str += str += str;
3 52 return str;
3 54 it(\'post_folder.apply(ctx, str, str);
3 55 it(\'_topics.length\', function(){
3 56 return str.should.apply(ctx, [\'\', [\'123456\', \'<li=\', \'<baz\'baz\']).should.should.eql(\'

4 12 fs.exists(viewDir),
4 13 fs.exists(draftDir)
4 24 partial.apply(partial, [
4 25 \'---',
4 26 \'title: {{ title }}',
4 27 \'date: {{ date }}',
4 28 \'---\'
4 60 fs.exists(draftDir),
4 61 fs.exists(pathFn.join(postDir),
4 62 .join(postDir, \'postDir, \'postDir, \'postDir\')
4 63 ])
4 65 }).spread(function(exist => {
4 66 return fs.exists(exist);
4 67 }).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(exist).then(
5 9 return hexo.theme.setView('widget/tag.swig', \'tag widget\');
5 11 return viewDir(viewDir);
5 14 fs.unlink(viewDir),
5 23 var result = list();
5 24 result.should.eql([
5 25 \'<ul class="tag-list">\',
5 26 \'<li class="tag-list-item">\',
5 27 \'<a class="tag-list-link" href="/tags/bar/">bar</a><span class="tag-list-count">1</span>\',
5 28 \'<ul class="tag-list-child">\',
5 30 \'<a class="tag-list-link" href="/tags/baz/">baz</a><span class="tag-list-count">2</span>\',
5 33 \'<a class="tag-list-link" href="/tags/foo/">foo</a><span class="tag-list-count">1</span>\',
5 35 \'</ul>\'
5 38 it(\'specified collection\', function(){
5 39 var result = list(\'<ul class="tag-list">\',
5 41 \'<a class="tag-list-list-link" href="/tags/bar/">\',
5 42 \'

6 9 return ctx.execFilter(\'after_route_render filter\', content => {
6 10 locals.setView('post.swig', partial);
6 15 fs.exists(pathFn.join(postDir, \'post.swig\'))
6 17 }).then(function(result){
6 19 meta({
6 20 path: partial,
6 21 layout: false
6 22 }),
6 24 path: pathFn.join(postDir, \'post.swig\', partial)
6 26 return result;
6 29 it(\'default\', () => {
6 30 partial.apply(ctx, [
6 31 create({cache: true}, locals()]).then(function(){
6 36 }).spread((file, data) => {
6 37 expect(data).to.eql(data);
6 38 partial.unlink(data);
6 41 it(\'custom\', () => {
6 44 \'body: "Hello"\',
6 48 var result = partial.apply(ctx, [
6 49 \'_content: "Hello"\',
6 54 \'<h1><p>Hello</p>\',
6 55 \'<p>Hello</p>\',
6 60 it(\'post_render()\',\',
6 61 it(\'draft visibility\',
6 62 it\'length: 2\',
6 63 \'title: 2\',
6 64 \'length: 3\',
6 65 \'relative:>\',
6 66 \'format: 3\',
7 9 return ctx.site.render.render({
7 10 title: \'Hello World',
7 11 layout: \'draft\'
7 12 }, options);
7 20 title: \'Hello World\'
7 24 fs.exists(themeDir),
7 36 partial(\'../widget/tag\').should.eql(\'tag widget\');
7 37 partial(\'widget/tag\').should.eql(\'tag widget\');
7 38 partial(\'foo\').should.eql(\'\');
7 39 partial(\'foo\', {tag: \'foo\'}).should.eql(\'\');
7 40 partial(\'bar\').should.eql(\'\');
7 41 partial(\'baz\').should.eql(\'\');
7 42 partial(\'boo\').should.eql(\'\');
7 43 partial(\'bar\', {tag: \'bar\'}).should.eql(\'\');
8 6 fs.readFile(hexo.config_path + 'after_render:html\
8 7 \'),
8 8 fs.exists(hexo.config_path)
8 10 }).then(function(result) {
8 11 result[0].should.eql(\'foo contents\');
8 12 result[1].should.eql(\'foo foo.bar as json\');
8 13 result[2].should.be.true;
8 18 var result = tagcloud();
8 20 \'<a href="/tags/abc/" style="font-size: 13.33px;">abc</a>\',
8 21 \'<a href="/tags/bcd/" style="font-size: 20px;">bcd</a>\',
8 22 \'<a href="/tags/cde/" style="font-size: 16.67px;">cde</a>\',
8 23 \'<a href="/tags/def/" style="font-size: 10px;">def</a>\'
8 24 ].join(\' \'));
8 26 it(\'title - virtual', function(){
8 27 var result = tagcloud(Tag.find({source: \'foo.md\'}), {title: \'RESTACULAR_ENV\'}), {
8 28 lang: \'zh-TW\'});
8 30 \'<a href="/tags/abc/" style="font-size: 10px;">abc</a>\',
8 31 \'<a href="/tags/bcd/" style="font-size: 20px;">bcd</a>\'
8 35 var result = tagcloud(Tag.find({source: \'foo.ico\', {target: \'baz.ico\'});
8 36 result.should.should.have.have.lengthOf(1);
8 39 it(\'external(\'browsers\', function() {
8 40 var result = [];
8 41 return collection.filter.map(function(function(item){
8 42 return collection.find({ url: function(item){
8 43 collection.ategories){
8 44 collection.find({ url: { url: { url: \'foo\'baz.ico\', i: \'baz.ico\' }).should.collection.schema.should.should.eql(collection.schema.collection.collection.schema.collection.schema.collection.schema.collection.collection.find({
8 45 _id: {collection: {collection: {0: \'foo\'})
8 47 }).should.deepEqual(function(function(collection.collection.collection.
9 9 return ctx.loadPlugin(require.resolve(\'hexo-renderer-marked'));
9 13 fs.listDir(viewDir)
9 15 }).then(function(exist) {
9 19 fs.rmdir(hexo.base_dir,
9 20 fs.existsSync(pathFn.join(themeDir, \'post\')),
9 21 fs.existsSync(pathFn.join(themeDir, \'page\')),
9 22 fs.existsSync(pathFn.join(themeDir, \'categories\')),
9 23 fs.existsSync(pathFn.join(themeDir, \'tags\'))
9 28 \'<!--${placeholder}${this.cache.get(themeDir) - 1}-->\',
9 29 \'<!--${placeholder}${this.cache.get(themeDir) + 1}-->\',
9 31 \'<!--${placeholder}${this.cache.get(themeDir) + 2}-->\',
9 32 \'<!--${placeholder}${this.cache.set(themeDir) + 2}-->\',
9 37 fs.readFile(partial, \'<html_body, \'<body, \'<h1>\', \'<h2>\', \'<p>\', \'<p>\', \'<p>\', \'<p>\', \'<p>\', \'<ul>\', \'<li>\', \'<li>\', \'<li>\', \'<div class="title>\', \'</li>\', \'<li>\', \'position>\', \'position</position</position>\', \'</s></li></p>\',
9 38 ].join(\'\', \'</li>\', \'</ul>\', \'</li>\', \'<li>\')).then(function() {
9 39 return ctx.extend.filter.render(partial, partial, locals = {_method: partial, root: partial, view_source });
9 40 }).then(function( partial, locals = { returnLocals });
