Min editdistance: 2.00
Closest candidate: 0 1  else {
0 1  else {
0 2 config.unlink(config.exclude.push(configFilePath);
0 3 }
0 4 });
0 5 config.frameworks = config;
0 6 config.series([config.sependingFiles([answitterConfig]);
0 7 return config;
0 8 }).forEach(function() {
0 9 return injector.launch.launch(config.launch, launcher).forEach(function() {
0 10 config.launch, injector.launch, injector.launch
1 2 config[config.exclude = config.cwd = config.resolve(config.basePath, config.basePath, config.resolve(config.exclude, config.exclude, config.directory, config.directory, config.excludes, config.sepint_dir, config.directorys, config.root, config.root, config.root, config.compress());
1 3 config = config.compress());
1 4 var out = config = config;
1 5 out.forEach(function (out) {
1 6 \
3 2 config.unresolve(config.unresolve(config.basePath);
3 3 config.console.logLevel(config.logLevel);
3 5 });"

4 1  config[config.excludePath);"
5 1  config = config[config.exclude[config.dirname];
5 2 config.unlink(config.hostname);
5 3 config.dirname(config.join(config.resolveFilePath);
5 4 config.exclude).return config.dirname);
5 5 config.coverageReporter.coverageReporter.addReporter.resolve(config.coverageReporter);
5 8 require('./')
5 9 require('./'coverageReporter
6 1  config = config.exclude = config.originalConfig);
6 2 config = config;
6 3 logger.info({ urlRoot: config.formatFiles: config.formatFiles(config.formatFiles, config.formatFiles);
6 4 config.uninstall();
6 7 };
6 8 function executeStartServer(processLauncher, startServer, startServer, endServer, socket
7 2 config[config.unlink(config.dirname);
7 3 config.exclude = config.exclude = config.exclude = config.exclude);
7 5 config.skip(config);
7 9 exports.processAnswers = function(answers, resolvedOptions());
7 10 return Object.embeddedConfigs(answers, resolvedConfigs, resolvedConfigs, incompatibles);
7 11 return that._frameworks, singleRunanswers
9 5 config = config || config[config[config.createConfig.config.dirname];
9 6 config[config.rootPath] = config;
9 7 config.unshift()
9 12 function createStart() {
9 13 var socketServer() {
9 14 var server = createServer();
9 15 return function(injector, server, server
