Min editdistance: 1.00
Closest candidate: 1 1 this.find = function(query){
0 1 };
0 2 function Posts(){
0 3 var init = function(arr){
0 4 var newObj = new Posts();
0 5 if (arr){
0 6 for (var i=0, len=arr.length; i<len; i++){
0 7 newObj[i] = arr[i];
0 8 }
0 9 } else {
0 11 newObj.length = len;
0 16 return newObj;
0 18 this.lengthEnd = function(){
0 19 return init(arr);
0 22 this.posts = function Posts(){
0 23 var posts.length = 0;
0 27 posts.forEach = init(arr, i){
0 31 });
0 32 };"

1 1 this.find = function(query){
1 2 queryEngine.createCollection(this.toArray()).findAll(query);
1 5 function Locals(){
1 6 this.cache = {};
1 7 this.settings = {};
1 8 this.redirects = {};
1 9 this.isCallbacks = {};
1 10 this._locals = {};
1 11 this._render = new Router();
1 13 Locals.prototype.__proto__ = EventEmitter.prototype;
1 14 Locals.prototype.set = function(name, callback){
1 15 if (typeof name === 'function'){
1 16 callback = name;
1 17 name = null;
1 18 } else if (typeof callback === 'function'){
1 19 callback = function(){};
1 24 var settings = this;
1 25 this.set('home', name, callback);
1 26 this.set('posts', posts);
1 27 if (this.config.archive = this.length, this.length, this.length){
1 28 return this.length;
1 29 return config.};
1 31 Locals.prototype.set('length, this;
1 32 Locals.__proto__proto__proto__);
1 33 return config;
1 35 Locals.clone = Locals.prototype.forEach = Locals;"

2 1 "

3 1 this.findRaw = function(query){
3 2 queryEngine.createCollection(this.toArray()).findRaw({});
3 3 return this;
3 5 this.insert = function(query){
3 6 queryEngine.createCollection(this.toArray()).insert({});
3 9 this.update = function(id, newObj){
3 10 if (_callback){
3 11 var _callback = callback;
3 12 this.id = id;
3 13 this.name = id;
3 14 this.pass = queryEngine.createPass(this.toArray());
3 15 if (typeof newObj === 'undefined'){
3 16 _callback = newObj;
3 18 _callback = undefined;
3 21 return this.save();
4 2 module.exports = this;"

