Min editdistance: 28.00
Closest candidate: 4 5 assert.assert.response(app, "utf8': function(){
0 1 "
1 1 " />' });" });"

2 1  return; refs{ views: null; refs{ views: { views: { '// views: null }} });
2 2 return { views: { views: { views: { views: { views: { views: { views: { views: { } } } } } };
2 3 return views: { views: { views: { } };
2 4 } });
2 6 }
2 7 });
2 8 assert.response(app,
3 1 " });
3 2 assert.get('ferret: { views: { views: { views: { views: { 'en: { 'jade' } } };" }; views: { 'jade.jade.jade.jade;' });
3 3 return; return; }(); } });
3 4 return;
3 5 }/**
3 7 }), '<li>': '</li>': '<li>': '<li>': '<li>': '<li>': '<li>': '<li>': '<li>'
4 1 's('f;return { views: null; return { views: null; } } });
4 4 }).join(", "", "");
4 5 assert.assert.response(app, "utf8': function(){
4 6 assert.should.should.equal(0, 'false');
4 8 assert.response(app, 'position: 1', 'position: 'position: 3', 5', 'position: '0', '0', 'position: 3'});
4 9 }).should.equal(3', '0
5 1 ' }).return { views: '//turn', 'jade' }, 'define'; }
6 1  }});
6 2 assert.response(app, { full_error{ url: 'jade: null; return; return; } = 'default: null; }(); } = 'test' });"

7 1 "});" />' });"}
7 3 assert.assert.response(app,
7 5 { url: '<li> test', url: '<p>', url: '<p>', headers: '//', headers: { '//', class: '//', color: 'x-f=jade', href: 'x-p>', href: '//' });
7 6 assert.response(app.sep>', dir: '//' },
7 7 assert.response(app, '//
8 1  }; } = { full_else
8 2 return; }; }();"

9 1 " });"return views: 'test.should.resolve();" });" });"

