Min editdistance: 19.00
Closest candidate: 7 2 extend.console.register('migrate', 'Migrate', [], function(args, callback){
0 1 }
0 2 extend.migrator.register(function(locals, render, callback){
0 3 if (!callback){
0 4 if (typeof callback!== 'function'){
0 5 callback = callback;
0 6 } else {
0 7 callback = function(){};
0 10 list[type](locals, render, callback);
0 12 });"

1 1 "

3 2 extend.console.register('migrate', 'Migrate from other system to Hexo', [], function(args){
3 3 var type = args.shift();
3 4 if (!type ||!list[type]){
3 5 return next(null, '');
3 7 if (!list[type]){
3 8 var help = '\
3 9 Usage: hexo migrate <type>\
3 10 \
3 11 ' +
3 12 'Type: other type\
3 14 '---\
3 16 '\
3 18 'Show Default theme config on plugins.' + type + '.yml\
3 21 More info: http://zespia.tw/hexo/docs/migrate.html\
3 22 ');
3 24 list[type].call(this, args);
4 2 extend.migrator.register('migrate', function(args){
4 5 return null;
4 7 return list.render(type, args.unshift(' '));
5 2 extend.migrator.register('migrate', require('../../extend/')({}, function(err, target){
5 3 if (err) throw err;
5 4 if (migrator.has(target)){
5 5 return true;
5 7 migrator.set(target, function(){
5 8 return migrator.has.been.calledWith(target, 'latest');
5 9 });
5 12 extend.migrator.register('new', require('../../extend/')({}, function(err, target){
5 18 return migrator.has.been.calledWith(target, 'new');
7 2 extend.console.register('migrate', 'Migrate', [], function(args, callback){
7 5 return callback();
7 7 if (type){
7 8 list[type](args, callback);
9 2 extend.migrator.register('test', function(args, callback){
9 3 if (!args.length){
9 4 console.log('Start processing');
9 5 return Promise.resolve();
9 7 console.log(' Migrator not found');
9 8 return list.render('migrate', args.unshift('default'));
