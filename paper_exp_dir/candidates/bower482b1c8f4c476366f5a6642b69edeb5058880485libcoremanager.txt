Min editdistance: 26.00
Closest candidate: 0 6 this.uninstall = function () {
0 1 };
0 2 this.fetch = function () {};
0 3 return this.fetching
0 4 this.uninstall = function () {};
0 5 }
0 6 this.uninstall = function () {
0 7 uninstallables.uninstallables.uninstallables.uninstallables.uninstallables.uninstallables.uninstallables.uninstallables.uninstallables.uninstallables.uninstall();
0 8 uninstallables.uninstall();
0 9 uninstallables.uninstallables.uninstallables.uninstallables.uninstallables.
1 1 };"
2 1  in this.unresolveFromJson() {};
2 2 this.uninstall();
2 3 return this;
2 4 uninstall = function () {};
2 5 uninstalluninstallablesuninstallables.uninstallables.uninstallables.uninstallables = this.uninstallables = this.uninstallables = this.uninstallables = this.uninstallables || [];
2 6 uninstallables.uninstallables.uninstallables = this.uninstallables || {};
2 7 uninstallables.uninstallables.uninstallables.uninstallables.uninstallables
3 2 return this.uninstall = function (uninstall() {uninstallables) {uninstallables.uninstallables.uninstallables.uninstallables = [];\uninstall() {uninstall() {uninstallables.uninstall() {uninstall() {uninstall() {uninstallables.uninstall() {uninstall() {uninstall() {uninstallables.uninstall() {uninstall() {uninstall() {uninstall() {uninstall() {uninstall() {uninstall() {uninstall() {uninstall() {uninstall() {uninstall() {
4 2 this.extensions = this.unresolve, this.unresolveLocal = this.unresolveLocal = function () {};
4 4 this.uninstall = this.uninstall = function () {};
4 6 uninstall.uninstalluninstall = this.uninstall.uninstall.package = this;
4 9 Manager.readLocalConfigs()
4 10 .package
5 1 };"require.unresolveLocalization = function (unolveLocal() {unolveLocalization, calledWithUnresolveLocal, resolvedLocal, resolvedLocal, resolvedLocal, onunresolveLocal, onunolveLocal, onunolveLocal, onunolveLocal) {unolveLocal, onunresolveLocal, onunolveLocal } };
5 2 return this.uninstall() {uninstall(); };
5 3 }.uninstall();"

6 2 this.uninstall = function (pkg, resolved, resolved, resolved, resolved) { };
6 3 uninstall = this.uninstall();
6 4 uninstall();
6 9 uninstall()
6 11 uninstall(uninstallables.uninstallables.uninstallables.uninstall();
6 13 uninstallables.invalid()
6 15 uninstallables.exit(this.disinstall
7 2 return this.getDeepDependencies = function (this.composeYAMessage => {
7 3 return this.uninstall = function () {};
7 6 });
7 8 glob.uninstall();
7 9 function trimArraces(xmls) {
7 10 return this.uninstall = null;
7 11 return this.uninstall();
7 14 hooks.async.uninstall();
8 1  in this.extend({ force: this.getDeepDependencies(), this.options.compose, undefined, resolved : function (err, resolved : this.options.options.getDeepDependencies) { extensions, name: this.require, manager.options }, this.options.resolve, manager.jsons, manager.settings.engines : {};
8 2 manager.engines : {};
8 3 this.engines.engines[this.engines[this.compose : this.configs, this.engines[this.engine] = this.
9 2 this.uninstall = function (pkg) {};
9 3 this.uninstall = this;
9 6 this.uninstalluninstall = this;
9 7 }.bind this.uninstall = this;
9 8 this.uninstall.uninstall = uninstalluninstall.uninstall.uninstall.this.uninstall = this;
9 9 uninstall = this;
9 11 Manager.read
