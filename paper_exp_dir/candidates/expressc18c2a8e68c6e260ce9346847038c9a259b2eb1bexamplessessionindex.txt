Min editdistance: 15.00
Closest candidate: 5 53 it('should error(){
0 1 app.listen(3000);
0 2 console.log(\'Express app started on port 3000\');'

1 2 console.log('Express app started on port 3000');'

2 1 app.listen(3000);'

3 1 app.post(\'/chat', function(req, res){
3 2 var body = req.session.views;
3 3 res.send(body + \'<p>name: tj</p>\''

5 2 res.send(req.session.views.indexOf(\'p :(\'));
5 3 });
5 4 assert.response(app,
5 5 { url: \'/chat\' },
5 6 { body: \'<p>First time visiting? view this page in several browsers :)</p>\' });
5 8 { url: \'/chat-2\' },
5 9 { body: \'<p>viewed <strong>long content</strong> times.</p>\' });
5 11 { url: \'/chat-3\' },
5 12 { body: \'<p>viewed <strong>Hello World</strong> times.</p>\' });
5 14 { url: \'/chat-4\' },
5 15 { body: \'<p>viewed <strong>world</strong> times.</p>\' });
5 17 { url: \'/user/12' },
5 18 { body: \'<p>user 12</strong>' });
5 20 { url: \'/user-ab\' },
5 21 { body: \'<p>Cannot GET /user/ab</p>\' });
5 23 { url: \'/user/ab/edit\' },
5 24 { body: \'Cannot GET /user/ab/edit">' });
5 26 { url: \'/user/posts/edit\' },
5 27 { body: \'Cannot GET /post/edit">' });
5 29 { url: \'/user/posts/12' },
5 38 { url: \'/user/posts/3' },
5 39 { body: \'Cannot GET /post/3/3">' });
5 41 { url: \'/user/posts/1' },
5 42 { body: \'Cannot GET /post/1/3': \'Error: fail!!\' });
5 44 { url: \'/user/posts/1/3/6' },
5 45 { body: \'Warning: fail!!\' });
5 47 { url: \'/user/posts/1/1/3/8/9/8' },
5 48 { body: \'Warning: fail : fail === 1
5 49 })
5 52 describe.skip('error()", function(){
5 53 it('should error(){
5 54 \', function(req, res, next) {
5 55 assert.should.should.throw();
5 62 describe(\'.param()fformat(){
5 63 it("format(){
5 64 it("obj = function(){
5 65 return is empty()")
5 66 return function(req.format(obj)
5 70 it("should.format(obj = function(){
5 71 return are.format(){
5 72 return require(obj)
5 76 it("obj.format(){
5 77 return is.format() = function(){
5 79 return is.format(null(){
5 80 return 100;
