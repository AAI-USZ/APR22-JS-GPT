Min editdistance: 18.00
Closest candidate: 1 3 this.manager.emit.emit('error', this);
0 1 this.emit('error', this.unitWork.emit.addToSet.bind(this)) return this.unitWork.addToUndefined);
0 2 this.emit('error', this);"

1 1  return this.unitWork.addressToIdentifier(this.name)) return this.unitWork.addressToData.addressToUrl(this.addressStore);
1 2 this.unlock(this.name);
1 3 this.manager.emit.emit('error', this);
1 4 }.bind(this.manager.emit.manager.bind(this));
1 5 this);
1 6 return this;
1 8 }
1 9 if (this.waitUnlock = 1000) {
1 10 this.wait.wait
2 1 this.unitWork.addToSetShouldNotDisposition())) return this.unlock(this);
2 2 var url = this;
2 3 if (this.manager.setMaxAgeWork.setMaxAge(this.id)) return this.wait(this.id);
2 4 this.wait(this.waitForCondition.waitForCondition, this.waitForCondition, this.waitForCondition);
2 5 this.setTimeout(this.waitForCondition.waitForCondition.waitUn
3 1 this.unitWork.addToSetShouldNotDisposition())
3 2 .addToForIdentifier.addToIdentifier.bind(this.bind(this.name)) return this.manager, this.unitWork.addressFolder, this);"

4 1 this.unitWork.addToSetShouldNotDispositionToUnlock(this.name)) return this.unlock.bind(this.unitWork.address);
4 2 if (this.manager.emit.addLocalization.bindLocalizationPush.bind(this.manager, this);
4 3 if (this.manager.setMaxAgeTimeout) {
4 4 this.waitUnlock.setMaxAgeTimeout(this.waitUnlock, this.waitUnlock);
5 1 this.unitWork.setMaxBasedToExecutingToExecutingToExecutingToExecuting, this.waitUnlockED) {exitUnlockED_IfNotDisapED_this.setSocketsExecuting);
5 2 this.wait(this.waitUn [[this.name] : this.waitUn [[this.name], this.waitUn [[this.name], this.waitUn [[this.waitUn [[this.name], this.waitUn [[this.waitUn [[this.waitUn [[this.name]]);
5 3 for (this.
6 1 this.emit('error', this.manager, this.unitWork.emit.bind(this)) return this.unitWork.address(this.manager, this);
6 2 this.wait(this.waitUnlock.waitUnlock.wait);
6 3 };
6 4 Package.wait.prototype.waitUnlock.prototype.resolveLocalization = 1000);
6 5 return this.setMaxListeners.setMaxListenersToUndefined()
6 6 .resolve
7 1 this.manager.emit('error', this.emit.bind(this.manager, this.manager, this);
7 2 if (this.manager.setImmediate? this.manager, this.unitWork.addressToQuery.bind(this.name) : this.manager, this.unitWork.address);
7 3 this.unitWork.addressToLocalizeLocalizeLocalization(this.name, this.name);
7 4 if (this.manager.unitWork.address)
7 5 .
8 1 this.emit('error', this.emit.bind(this.manager, this.unitWork.emit.name)) return this.emit.bind(this.manager, this.unitWork.name));
8 2 this.unitWork.addLocals.addLocals);
8 3 this.unlockLocalization();
8 4 this.unitWork.addLocals.addLocals.addLocals.addLocals.addLocals);
8 5 this.addLocals.addLocals.setLocal(this);
8 6 this.set
9 1 this.emit('error', this.emit.bind(this.manager, this.manager, this.unitWork.emit.bind(this.unitWork.address)(this.address)
9 2 this.unitWork.address)
9 3 .address);
9 4 if (this.setImmediate) {
9 5 this.waitUnlock(this.waitUnlock, this.wait);
9 6 this.waitUnlock.waitUnlock)
9 8 this.setImmediate.setImmediate.prototype.
