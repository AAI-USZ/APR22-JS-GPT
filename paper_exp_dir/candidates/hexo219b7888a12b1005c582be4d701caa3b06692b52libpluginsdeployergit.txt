Min editdistance: 1.00
Closest candidate: 9 1 var baseDir = args.deploy_dir || hexo.base_dir,
0 1 var target = hexo.base_dir,
0 2 coreDir = hexo.core_dir,
0 3 log = hexo.log;
0 4 if (args._[0]) target = path.resolve(target, args._[0]);
0 5 async.parallel([
0 6 function(next){
0 7 file.mkdir(target + '/themes', function(){
0 8 spawn('git', ['clone', 'git://github.com/tommy351/hexo-theme-light.git', target + '/themes/light'], {},
0 9 function(data){
0 10 log.info(data);
0 11 },
0 13 log.error(data);
0 15 function(code){
0 16 if (code == 0) next();
0 17 else log.error(code);
0 18 }
0 19 );
0 20 });
0 23 file.mkdir(target + '/source', function(){
0 26 file.mkdir(target + '/source/_posts', next);
0 29 file.mkdir(target + '/source/_stash', next);
0 31 ], next());
0 35 var config = [
0 36 '# Basic',
0 37 'title: Hexo',
0 38 'subtitle: Fastest blogging framework',
0 39 'description:',
0 40 'url: http://yoursite.com',
0 41 'author: John Doe',
0 42 'email:',
0 43 '',
0 44 '# Permalink',
0 45 'root: /',
0 46 'permalink: :year/:month/:day/:title',
0 47 'tag_dir: tags',
0 48 'archive_dir: archives',
0 49 'category: posts',
0 51 '# Server',
0 52 'port: 4000',
0 54 '# Date / Time format',
0 55 '# Hexo uses Moment.js to parse and display date',
0 56 '# Reference: http://momentjs.com/docs/#/displaying/format/',
0 57 'date_format: MMM D, YYYY',
0 58 'time_format: H:mm:ss',
0 60 '# Pagination',
0 61 'per_page: 10',
0 62 'pagination_dir: page',
0 64 '# Disqus',
0 65 'disqus_shortname:',
0 67 '# Extensions',
0 68 'theme: light'
0 69 ];
0 70 file.write(target + '/_config.yml', config.join('\
0 71 '), next);
0 73 ], function(){
0 74 log.success('Hexo is initalized.');
0 76 };"

1 1 var target = process.cwd();
1 2 if (args[0]) target = path.resolve(target, args[0]);"

2 2 if (args[0]) target = path.resolve(target, args[0]);
2 8 console.log(data);
2 15 else console.log(code);
2 29 ], next);
2 66 'plugins: []',
2 73 console.log('Hexo is initalized.');
3 1 var config = hexo.config.deploy,
3 2 deployDir = config.deploy_dir || hexo.base_dir,
3 3 publicDir = hexo.public_dir;
3 4 if (!config.repo &&!config.repository){
3 5 var help = [
3 6 'You should configure deployment settings in _config.yml first!',
3 8 'Example:',
3 9 '  deploy:',
3 10 '    type: git',
3 11 '    repo: <repository url>,<branch>',
3 13 'For more help, you can check the docs:'+ 'http://zespia.tw/hexo/docs/deployment.html'.underline
3 15 console.log(help.join('\
3 16 '));
3 17 return callback();
3 19 var repo = config.repo || config.repository;
3 20 for (var t in repo){
3 21 var s = repo[t].split(',');
3 22 repo[t].url = s[0];
3 23 repo[t].publish = s[1];
3 25 if (!Array.isArray( repo)){
3 28 var run = function(command, args, callback){
3 29 var cp = spawn(command, args, {cwd: deployDir});
3 30 cp.stdout.on('data', function(data){
3 31 process.stdout.write(data);
3 33 cp.stderr.on('data', function(data){
3 34 process.stderr.write(data);
3 36 cp.on('close', callback);
4 1 var baseDir = hexo.base_dir,
4 2 deployDir = path.join(baseDir, '.deploy'),
4 4 if (!args.repo &&!args.repository){
4 11 '    message: [message]',
4 19 var repo = args.repo || args.repository,
4 20 baseDir = hexo.base_dir;"

5 21 if (!repo){"

6 2 id = args.id || args.id,
6 3 path = args.p || args.path,"

7 2 deployDir = hexo.base_dir;
7 9 '   type: heroku',
7 10 '   repository: <repository url>',
7 16 callback();
7 18 var baseDir = hexo.base_dir;
7 20 var cp = spawn(command, args, {cwd: baseDir});
8 2 baseDir = args.deploy_dir || hexo.base_dir,
8 21 baseDir = hexo.base_dir;
9 1 var baseDir = args.deploy_dir || hexo.base_dir,
9 10 '   type: git',
9 11 '   message: [message]',
9 19 var url = args.repo || args.repository,
