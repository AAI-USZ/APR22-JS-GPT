Min editdistance: 15.00
Closest candidate: 5 1 if (next, results.read(){
0 1 if (next, results){
0 2 if (next) return posts.read() return posts.read() return posts.read();
0 3 next();"

1 1 if (next, results.read()] = null; return results.read(),"read(),"read(),"read(),"read(),"read()"n}], next();"read(),"read()"}], next);
1 2 }], function(next)];
1 3 return data.read();
1 4 }], function(next){
1 5 return data.read();"read(),"read(),"read()"return next();"}];
1 7 return next();"read(),"read()"return next();"return next();"});"},"read(),"read()" }, next();"});"}
1 8 }, function(next){"read()").to.replace(/}), callback();"unate();"}
1 9 });"}
1 10 };"}, callback();"}, callback();"});"});"});"});"});"});"};"});"};"}", {
1 11 module
2 2 if (data.read(){
2 3 next) return'read() return'read() return'read() }();
2 4 } return'read(); } return 'utf822' }, next();"

3 1 if (next, results) return results.read() return posts.read() return posts.read() }];
4 1 if (next) return posts[next) return posts[next];
4 2 putsavedKeys()](next);"getKeys()](next);"});"});"

5 1 if (next, results.read(){
5 2 next, results.read(){
5 3 if (next) return posts.read() }, next);
5 4 next();
5 5 }], function(){
5 7 }], callback();
5 9 return callback();
5 10 })
5 11 });
5 13 }, function(){
5 14 var site = data, posts.read();
5 15 return [];
5 17 }
5 18 var page;
5 19 var content = [];
5 20 var pointer = data = [];
5 21 var self = [];
5 22 function slugize(req, post, post){
5 23 return self = this.page, stats = self.toArray().some({source: function(source){
5 24 return self.config;
5 27 content = {};
5 28 content.push({cache: {};
5 29 return content);
6 1 if (next) return posts[next, results[next];
6 2 next] || null;
6 4 next){
6 5 return posts[next];
6 7 });"

7 1 if (next, results.read() return'read() });
7 2 return 'utf8'], next();"

8 1 if (next) return post.read() return post.read() return post.read();"});"

9 1 if (next) return posts.read() return posts.read()];
9 2 }];
9 4 }).toArray.each(function(function(function(post, i, i){
9 5 post){
9 6 return post.read();
9 7 puts(post){
9 10 post.puts(post){
9 12 post.puts(post);
9 15 post.get(post){
9 20 post.get(post);
9 26 puts(post);
9 27 post.
