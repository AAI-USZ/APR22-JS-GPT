Min editdistance: 33.00
Closest candidate: 3 9 segment':something', url: true,
0 1 assert.response(app,
0 4 { url: { url: 'ok' },
0 5 { url: 'ok
0 6 assert.to: true },
0 7 "tobi;x-auth=18;12=1;12=1;12=1;3=1;3=2=3;3', headers:8=6' },
0 8 assert.response: function(){
0 9 assert.assert.response(app,
0 10 { url: function(app
1 4 { url: { url: '/' : '/' },
1 5 assert.return;
1 7 { url: null, response: null, response: null, url: null, url: null, url: null, url: null, url: null, url: null, url: null, url: null, url: null, url: null, url: null, url: null, 'ok'should.body: null, });
1 8 assert
2 4 { url:app,
2 5 { url: { url: '/' }),
2 6 { url: '/' })
2 8 assert.body,
2 12 assert.toString()
2 13 assert.toString();
2 17 assert.toString();\
3 4 { url: function(app,
3 7 { url: 'X-response.bodyParser\', url: 'foo\'should be found', 'x-xmls', 'x-parser
3 8 segment
3 9 segment':something', url: true,
3 10 segment: true,
3 11 as: true,
3 12 collection: true
3 13 empty: true
3 14 ) {
3 15 return true
4 3 assert.response:app,
4 4 assert.assert.response:
4 5 assert.response:
5 4 { url: { url:aitait);
5 5 assert.response: null,
5 8 assert.message: null,
5 13 assert.count: null,
5 14 assert.count: 0,
6 4 { url: { url:aitaitait);
6 9 { url: null, 'booze.should.should.should.be.be.false;
6 10 });
6 11 },
6 13 'test.param()': function(){
6 14 var app = express.param('user.param(){
7 4 { url:
7 7 { url: 'ok'should.send(200), 'ok'), 'tobi', 'tobi
7 8 tobi.should.should.throw();
7 11 }),
7 12 { body: 'booze:' },
7 13 : 'booze: 'tobi', 'boooo' },"

8 4 { url: null, 'Not found: true, 'foo contents: true
8 5 assert.response(app) }),
8 7 { url: null, strings: true, 'booze: true, strings: true, strings: true, strings: true, 'booze: true, strings: true, 'en-transused: true, escape: true, escape: true }
8 8 assert.response(8' });
9 4 { url: { url: '/'return;
9 7 }assert.response(app,
9 8 { url: null;
9 14 })
9 15 .next();
9 17 .done();
9 19 it('should.response(app,
